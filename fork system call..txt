// Shital K Dhamal


// Experiment 4 a: - Create a child process using the fork system call.
// (Obtain the process ID of both child and parent by using getpid and getppid system call.)


#include <stdio.h>
#include <sys/types.h>
#include <unistd.h>


int main()
{
    // fork() makes two processes that run the same program.
    pid_t pid = fork();


    if (pid < 0)
    {
        // Error handling if fork fails
        perror("Fork failed");
        return 1;
    }
    else if (pid == 0)
    {
        // This block runs in the child process
        printf("Child Process:\n");
        printf("Child PID = %d\n", getpid());   // getpid() gives child's process ID
        printf("Parent PID = %d\n", getppid()); // getppid() gives parent's process ID
    }
    else
    {
        // This block runs in the parent process
        printf("Parent Process:\n");
        printf("Parent PID = %d\n", getpid());  // getpid() gives parent's process ID
        printf("Child PID = %d\n", pid);        // fork() returns child's process ID in parent
    }


    return 0;
}